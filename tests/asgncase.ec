(* -------------------------------------------------------------------- *)
require import AllCore.

(* -------------------------------------------------------------------- *)
module M = {
  proc f(x : int, y : int) = {
    var x', y' : int;

    (x', y') <- (x, y);

    return (x', y');
  }
}.

(* -------------------------------------------------------------------- *)
lemma L : hoare[M.f : arg = (0, 1) ==> res = (0, 1)].
proof.
proc.
case <- 1.
seq 1 : (x' = 0 /\ y = 1).
- by auto.
- by auto.
qed.
