# syntax = devthefuture/dockerfile-x

FROM ./Dockerfile.base as base-build

RUN \
	sudo apt-get -q -y install wget curl python3 python3-pip python3-yaml && \
	sudo apt-get -q -y clean

RUN \
	opam pin add -n easycrypt https://github.com/EasyCrypt/easycrypt.git && \
	opam install --deps-only --confirm-level=unsafe-yes easycrypt && \
	opam clean

COPY --chmod=0755 --chown=1001:0 docker-parts/alt-ergo bin/run-alt-ergo

ENV PATH="/home/charlie/bin:$PATH"

RUN \
	version=2.6.0 && \
	opam switch create --no-switch alt-ergo-${version} ocaml-system && \
	opam pin     --switch=alt-ergo-${version} add -n alt-ergo ${version} && \
	opam install --switch=alt-ergo-${version} --deps-only --confirm-level=unsafe-yes alt-ergo && \
	opam install --switch=alt-ergo-${version} alt-ergo && \
	opam clean   --switch=alt-ergo-${version} && \
	ln -s run-alt-ergo ~/bin/alt-ergo-${version}

RUN \
	version=2.5.4 && \
	opam switch create --no-switch alt-ergo-${version} ocaml-system && \
	opam pin     --switch=alt-ergo-${version} add -n alt-ergo ${version} && \
	opam install --switch=alt-ergo-${version} --deps-only --confirm-level=unsafe-yes alt-ergo && \
	opam install --switch=alt-ergo-${version} alt-ergo && \
	opam clean   --switch=alt-ergo-${version} && \
	ln -s run-alt-ergo ~/bin/alt-ergo-${version}

RUN \
	version=2.4.3 && \
	opam switch create --no-switch alt-ergo-${version} ocaml-system && \
	opam pin     --switch=alt-ergo-${version} add -n alt-ergo ${version} && \
	opam install --switch=alt-ergo-${version} --deps-only --confirm-level=unsafe-yes alt-ergo && \
	opam install --switch=alt-ergo-${version} alt-ergo && \
	opam clean   --switch=alt-ergo-${version} && \
	ln -s run-alt-ergo ~/bin/alt-ergo-${version}

FROM base-build as main-linux-amd64

RUN \
	version=1.8 && \
	wget -O cvc4 https://github.com/CVC4/CVC4-archived/releases/download/${version}/cvc4-${version}-x86_64-linux-opt && \
	sudo install -m 0755 cvc4 /usr/local/bin/cvc4-${version} && \
	rm -f cvc4

RUN \
	version=1.0.9 && \
	wget -O cvc5 https://github.com/cvc5/cvc5/releases/download/cvc5-${version}/cvc5-Linux && \
	sudo install -m 0755 cvc5 /usr/local/bin/cvc5-${version} && \
	rm -f cvc5

RUN \
	version=4.13.0 && glibc=2.35 && \
	wget -O z3.zip https://github.com/Z3Prover/z3/releases/download/z3-${version}/z3-${version}-x64-glibc-${glibc}.zip && \
	unzip -j z3.zip z3-${version}-x64-glibc-${glibc}/bin/z3 && \
	sudo install -m 0755 z3 /usr/local/bin/z3-${version} && \
	rm -f z3 z3.zip

RUN \
	version=4.12.6 && glibc=2.35 && \
	wget -O z3.zip https://github.com/Z3Prover/z3/releases/download/z3-${version}/z3-${version}-x64-glibc-${glibc}.zip && \
	unzip -j z3.zip z3-${version}-x64-glibc-${glibc}/bin/z3 && \
	sudo install -m 0755 z3 /usr/local/bin/z3-${version} && \
	rm -f z3 z3.zip

RUN \
	version=4.8.17 && glibc=2.31 && \
	wget -O z3.zip https://github.com/Z3Prover/z3/releases/download/z3-${version}/z3-${version}-x64-glibc-${glibc}.zip && \
	unzip -j z3.zip z3-${version}-x64-glibc-${glibc}/bin/z3 && \
	sudo install -m 0755 z3 /usr/local/bin/z3-${version} && \
	rm -f z3 z3.zip

FROM main-linux-amd64

RUN \
	opam exec -- why3 config detect
