require import AllCore List Distr DBool.

(* --------------------------------------------------------------------------- *)

type msg.
type cipher.

type pkey.
type skey.

module type EncScheme = {
  proc kg() : pkey * skey
  proc enc(pk:pkey, m:msg) : cipher
  proc dec(sk:skey, c:cipher) : msg option
}.

quantum module type AdvCPA = {
  proc choose (pk:pkey) : msg * msg
  proc guess (c:cipher) : bool
}.

module CPA(A:AdvCPA) (O:EncScheme) = {

  proc main() = {
    var pk, sk, b, b', m1, m2, c;
    (pk, sk) <@ O.kg();
    (m1,m2) <@ A.choose(pk);
    b <$ {0,1};
    c   <@ O.enc(pk, if b then m1 else m2);
    b' <@ A.guess(c);
    return b = b';
  }

}.


